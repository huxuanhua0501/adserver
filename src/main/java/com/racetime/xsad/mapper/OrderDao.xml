<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.racetime.xsad.dao.OrderDao">

    <select id='getChannelAndPrice' resultType="java.util.Map">
            SELECT
                adp.price,
                ada.channel_id
            FROM
                `ad_position` adp,
                ad_app ada
            WHERE
                adp.app_id = ada.id
            AND adp.thrid_position_id=#{thrid_position_id}
    </select>

    <select id="getPvUv" resultType="java.util.Map">
        SELECT
        SUM(
        pmpr.pv * pmpr.device_num * ${num}
        ) AS pv,
        SUM(uv * device_num) AS uv,
        SUM(${num}*${price}) AS price,
        SUM(${num}*pmpr.price) AS floor_price
        FROM
        `pmp_resource` pmpr,
        pmp_resource_stock pmprs
        WHERE
        pmpr.id = pmprs.pmp_resource_id
        AND pmprs.id IN
        <foreach item="item" index="index" collection="list" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPVandUVandPRICE" resultType="java.util.Map">
        SELECT
        SUM(pr.pv * pr.device_num * ${num}) AS pv,
        SUM(pr.uv * ${num}) AS uv,
        SUM(par.sailed_cpm * ${num}) price,
        SUM(pr.price* ${num}) floor_price
        FROM
        `pmp_resource` pr,
        pmp_resource_stock prs,
        pmp_adxadslot_relation par
        WHERE
        pr.id = prs.pmp_resource_id
        AND par.pmp_resource_id = pr.id
        AND prs.id IN
        <foreach item="item" index="index" collection="list" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getExistingOrder" resultType="java.util.Map">
            SELECT
                SUM(pmpo.num) AS num,
                pmpod.pmp_resouce_stock_id AS id
            FROM
                `pmp_orders` pmpo,
                pmp_order_detail pmpod
            WHERE
                pmpo.orderid = pmpod.order_id
            AND pmpo.order_type IN (1, 2)
            AND  pmpod.put_time &gt; CURDATE()
            GROUP BY
                pmpod.pmp_resouce_stock_id,
                pmpod.put_time
    </select>
    <select id="getPmp_Resource" resultType="java.util.Map">
            SELECT
                pmprs.stock AS num,
                pmprs.id AS  id
            FROM
                `pmp_resource` pmpr,
                pmp_resource_stock pmprs
            WHERE
                pmpr.id = pmprs.pmp_resource_id

    </select>
    <insert id="InsertOrder">
        INSERT INTO pmp_orders (
            orderid,
            pv,
            uv,
            ad_app_id,
            ad_position_id,
            order_name,
            ad_customer_id,
            num,
            money,
            floor_price,
            material_id,
            start_time,
            end_time,
            ad_channel_id,
             order_type,
            createtime
        )
        VALUES
            (
                #{map.orderId},
                #{map.pv},
                #{map.uv},
                #{map.ad_app_id},
                #{map.ad_position_id},
                #{map.order_name},
                #{map.ad_customer_id},
                #{map.num},
                #{map.money},
                #{map.floor_price},
                #{map.material_id},
                #{map.sdate},
                #{map.edate},
                #{map.ad_channel_id},
                1,
                now()
            )
    </insert>
    <select id="getResource" resultType="java.util.Map">
        SELECT
            pmpr.city_code AS city_code,
            pmpr.scene_id AS scene_id,
            pmpr.device_num,
            pmpr.pv * pmpr.device_num * ${num} AS pv,
            pmpr.uv * pmpr.device_num AS uv,
            pmpr.ssp_adslot_id AS adslot_id,
            pmpr.ssp_app_id AS ad_app_id,
            pmprs.mdate AS put_time,
            ${num} AS num,
            pmprs.id AS pmp_resouce_stock_id,
            par.adx_adslot_id AS adx_adslot_id,
            pmpr.price AS ssp_adslot_price,
            par.sailed_cpm AS adx_adslot_price,
            par.cpm AS adx_adslot_cpm,
            pmpr.cpm AS ssp_adslot_cpm
            FROM
            `pmp_resource` pmpr,
            pmp_resource_stock pmprs,
            pmp_adxadslot_relation par,
             WHERE
                 pmpr.id = pmprs.pmp_resource_id
            AND par.pmp_resource_id = pmpr.id
             AND  pmprs.id IN
        <foreach item="item" index="index" collection="list" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </select>
    <insert id="insertPmp_order_detail">
        INSERT INTO pmp_order_detail (
        order_detail_id,
        adslot_id,
        city_code,
        scene_id,
        estimate_pv,
        estimate_uv,
        put_time,
        pmp_resouce_stock_id,
        order_id,
        creat_time,
        num,
        adx_adslot_id,
        ssp_adslot_price,
        adx_adslot_price,
        adx_adslot_cpm,
        ssp_adslot_cpm
        )
        VALUES
        <foreach collection="list" item="map" index="index" separator=",">(
            (SELECT REPLACE(UUID(), '-', '') AS order_detail_id),
            #{map.adslot_id},
            #{map.city_code},
            #{map.scene_id},
            #{map.pv},
            #{map.uv},
            #{map.put_time},
            #{map.pmp_resouce_stock_id},
            #{orderid},
            now(),
            #{map.num},
            #{map.adx_adslot_id},
            #{map.ssp_adslot_price},
            #{map.adx_adslot_price},
            #{map.adx_adslot_cpm},
            #{map.ssp_adslot_cpm}
            )
        </foreach>
    </insert>

    <select id="getCustomer_id" resultType="java.util.Map">
        SELECT
            material_url,
            customer_id
        FROM
            `ad_material`
        WHERE
            status = 1
    </select>

    <select id="selectChannel_id" resultType="java.util.Map">
            SELECT
                id AS adx_app_id,
                channel_id
            FROM
                `adx_app`;
    </select>
    <update id="insertOrUpdateAdx_Report">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            SELECT count(1) FROM `adx_report` WHERE md5Key=#{pojo.md5Key}
        </selectKey>
        <if test="count == 0">
            INSERT INTO adx_report (
            ssp_app_id,
            ssp_adslot_id,
            adx_app_id,
            adx_adslot_id,
            ad_customer_id,
            ad_channel_code,
            ad_city_code,
            date_hour,
            date_day,
            ad_serving_id,
            md5Key,
            adx_request_num,
            response_bid_success_num,
            response_bid_fail_num,
            return_success_num,
            black_success_num,
            createtime,
            scene_id
            )
            VALUES
            (
            #{pojo.ssp_app_id},
            #{pojo.ssp_adslot_id},
            #{pojo.adx_app_id},
            #{pojo.adx_adslot_id},
            #{pojo.ad_customer_id},
            #{pojo.ad_channel_id},
            #{pojo.ad_city_code},
            #{pojo.date_hour},
            #{pojo.date_day},
            #{pojo.ad_serving_id},
            #{pojo.md5Key},
            #{pojo.adx_request_num},
            #{pojo.response_bid_success_num},
            #{pojo.response_bid_fail_num},
            #{pojo.return_success_num},
            #{pojo.black_success_num},
            sysdate(),
            #{pojo.scene_id}
            )
        </if>
        <if test="count>0">
            UPDATE
            adx_report
            SET
            adx_request_num = adx_request_num + #{pojo.adx_request_num},
            response_bid_success_num = response_bid_success_num + #{pojo.response_bid_success_num},
            response_bid_fail_num = response_bid_fail_num + #{pojo.response_bid_fail_num},
            return_success_num = return_success_num + #{pojo.return_success_num},
            black_success_num = black_success_num + #{pojo.black_success_num}
            WHERE
            md5Key=#{pojo.md5Key}
        </if>
    </update>
</mapper>